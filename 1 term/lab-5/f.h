//
// К-13
// Бойко Катерина
//

#ifndef H_H_INCLUDED
#define H_H_INCLUDED

const double a = -0.9;
const double b = 0.9;
const double minH = 0.001;
const double minE = 0.000001;

/**
 * Функція для отримання від користувача даних для подальшої роботи программи
 * та запису їх у змінні, адреси яких позначені як а0, b0, h, E
 *
 * @param a0 адреса змінної, що позначає початкове значення табулювання > -0.9
 * @param b0 адреса змінної, що позначає кінцеве значення табулювання < 0.9
 * @param h адреса змінної, що позначає крок табулювання
 * @param E адреса змінної, що позначає точність обчислення
 * @return int 1 за успішного спілкування з користувачем та 0 у випадку помилки читання, або невідповідності змінної умовам задачі
 */
int communicate(double &a0, double &b0, double &h, double &E);

// Функції для гарного виводу таблиці на екран
void header();
void footer();
void horizontal_line();

/**
 * Функція для виводу результатів, що відповідають заданому аргументу
 *
 * @param i поточне значення аргументу функції
 * @param E точність обчислення
 * @return нічого
 */
void results(double i, double E);

/**
 * Функція для виводу таблиці на екрані
 *
 * @param a0 початкове значення табулювання
 * @param b0 кінцеве значення табулювання
 * @param h крок табулювання
 * @param E точність обчислення
 * @return нічого
 */
void show_table(double a0,double b0, double h, double E);

/**
 * Функція для обчислення суми x^n/2n! при 0 <= n < infinity
 *
 * @param x поточне значення аргументу функції
 * @param eps точність обчислення
 * @return double результат обчислень
 */
double S(double x, double eps);

/**
 * Функція для обчислення виразу x^n/2n!
 *
 * @param n поточне значення змінної n
 * @param x поточне значення аргументу функції
 * @return double результат обчислень
 */
double fdn(int n, double x);

/**
 * Функція для обчислення факторіалу натурального числа
 *
 * @param n натуральне число
 * @return long long 0, при n < 0; 1 при n = 0; результат обчислень при n > 0
 */
long long fact(int N);

#endif // H_H_INCLUDED
